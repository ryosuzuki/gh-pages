{"version":3,"file":"static/webpack/static/development/pages/index.js.124afeb08bcbf4674627.hot-update.js","sources":["webpack:///./content/output/projects sync ^\\.\\/.*\\.json$"],"sourcesContent":["var map = {\n\t\"./ar-and-robotics.json\": \"./content/output/projects/ar-and-robotics.json\",\n\t\"./atelier.json\": \"./content/output/projects/atelier.json\",\n\t\"./augmented-math.json\": \"./content/output/projects/augmented-math.json\",\n\t\"./augmented-physics.json\": \"./content/output/projects/augmented-physics.json\",\n\t\"./chameleon-control.json\": \"./content/output/projects/chameleon-control.json\",\n\t\"./collagevis.json\": \"./content/output/projects/collagevis.json\",\n\t\"./dynablock.json\": \"./content/output/projects/dynablock.json\",\n\t\"./electro-voxel.json\": \"./content/output/projects/electro-voxel.json\",\n\t\"./expandable-robots.json\": \"./content/output/projects/expandable-robots.json\",\n\t\"./flux-marker.json\": \"./content/output/projects/flux-marker.json\",\n\t\"./hapticbots.json\": \"./content/output/projects/hapticbots.json\",\n\t\"./holobots.json\": \"./content/output/projects/holobots.json\",\n\t\"./inflatablebots.json\": \"./content/output/projects/inflatablebots.json\",\n\t\"./lift-tiles.json\": \"./content/output/projects/lift-tiles.json\",\n\t\"./mixed-initiative.json\": \"./content/output/projects/mixed-initiative.json\",\n\t\"./mixels.json\": \"./content/output/projects/mixels.json\",\n\t\"./morphio.json\": \"./content/output/projects/morphio.json\",\n\t\"./pep.json\": \"./content/output/projects/pep.json\",\n\t\"./phd-thesis.json\": \"./content/output/projects/phd-thesis.json\",\n\t\"./physica.json\": \"./content/output/projects/physica.json\",\n\t\"./pufferbot.json\": \"./content/output/projects/pufferbot.json\",\n\t\"./reactile.json\": \"./content/output/projects/reactile.json\",\n\t\"./realitycanvas.json\": \"./content/output/projects/realitycanvas.json\",\n\t\"./realitysketch.json\": \"./content/output/projects/realitysketch.json\",\n\t\"./realitytalk.json\": \"./content/output/projects/realitytalk.json\",\n\t\"./refazer.json\": \"./content/output/projects/refazer.json\",\n\t\"./robovisar.json\": \"./content/output/projects/robovisar.json\",\n\t\"./roomshift.json\": \"./content/output/projects/roomshift.json\",\n\t\"./selective-self-assembly.json\": \"./content/output/projects/selective-self-assembly.json\",\n\t\"./shape-it.json\": \"./content/output/projects/shape-it.json\",\n\t\"./shapebots.json\": \"./content/output/projects/shapebots.json\",\n\t\"./sketched-reality.json\": \"./content/output/projects/sketched-reality.json\",\n\t\"./tabby.json\": \"./content/output/projects/tabby.json\",\n\t\"./teachable-reality.json\": \"./content/output/projects/teachable-reality.json\",\n\t\"./thermopixels.json\": \"./content/output/projects/thermopixels.json\",\n\t\"./trace-diff.json\": \"./content/output/projects/trace-diff.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./content/output/projects sync recursive ^\\\\.\\\\/.*\\\\.json$\";"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}