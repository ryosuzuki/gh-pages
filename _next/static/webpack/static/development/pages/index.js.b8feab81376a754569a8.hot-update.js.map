{"version":3,"file":"static/webpack/static/development/pages/index.js.b8feab81376a754569a8.hot-update.js","sources":["webpack:///./pages/students.js"],"sourcesContent":["import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport students from '../content/output/students.json'\n\n/*\nimport summary from '../content/output/ilab-summary.json'\nconst names = [\n  'neil-chulpongsatorn',\n  'marcus-friedel',\n  'adnan-karim',\n  'aditya-gunturu',\n  'mehrad-faridan',\n  'jian-liao',\n  'zhijie-xia',\n  'nishan-soni',\n  'bheesha-kumari',\n  'jarin-thundathil',\n  'kevin-van',\n  'melissa-hoang',\n  'abhinav-pillai',\n  'keiichi-ihara',\n  'mille-skovhus-lunding',\n  'rasmus-lunding',\n  'ryota-gomi',\n  'kyzyl-monteiro',\n  'shivesh-jadon',\n  'hiroki-kaimoto',\n  'ritik-vatsal',\n  'shrivatsa-mishra',\n  'tian-xia',\n  'christopher-rodriguez',\n  'harrison-chen',\n  'kaynen-mitchell',\n  'manjot-khangura',\n  'manuel-rodriguez',\n]\n\nlet students = []\nfor (let name of names) {\n  let student = summary.fileMap[`content/output/people/${name}.json`]\n  student.id = name\n  student.photo = `https://raw.githubusercontent.com/ucalgary-ilab/ilab-website/master/static/images/people/${name}.jpg`\n  students.push(student)\n}\n*/\n\nfor (let student of students) {\n  student.photo = `https://raw.githubusercontent.com/ucalgary-ilab/ilab-website/master/static/images/people/${student.id}.jpg`\n}\n\nclass Students extends React.Component {\n  componentDidMount() {\n  }\n\n  renderLink(student, key) {\n    if (!student[key]) {\n      return ''\n    }\n\n    let title = student[key].split('/')[3]\n    let href\n    let icon\n    switch(key) {\n      case 'url':\n        icon = 'fas fa-link fa-fw'\n        break\n      case 'scholar': \n        icon = 'fas fa-graduation-cap fa-fw'\n        break\n      case 'twitter':\n        icon = 'fab fa-twitter fa-fw'\n        break\n      case 'facebook':\n        icon = 'fab fa-facebook-square fa-fw'\n        break\n      case 'github':\n        icon = 'fab fa-github-alt fa-fw'\n        break\n      case 'cv':\n        icon = 'far fa-file fa-fw'\n        break\n      case 'email':\n        icon = 'far fa-envelope fa-fw'\n        break\n      case 'linkedin':\n        icon = 'fab fa-linkedin-in fa-fw'\n        break\n    }\n\n    return (\n      <div className=\"item\">\n        <a href={ student[key] } target=\"_blank\" style={{ fontSize: '1.2em' }}>\n          <i className={ icon } />\n        </a>\n      </div>\n    )\n  }  \n\n  getTitle(student) {\n    let type = student.type\n    if (type === 'alumni') {\n      type = student.past\n    }\n    switch (type) {\n      case 'postdoc':\n        student.title = 'Postdoc'\n        break\n      case 'phd':\n        student.title = 'PhD'\n        break\n      case 'master':\n        student.title = 'Master'\n        break\n      case 'undergrad':\n        student.title = 'Undergrad'\n        break\n      case 'intern':\n        student.title = 'Intern'\n        break\n      case 'visiting':\n        student.title = 'Visiting'\n        break\n    }\n    return student\n  }\n\n  renderStudent(student) {\n    student = this.getTitle(student)\n    return (\n      <a className=\"card\" href={`https://ilab.ucalgary.ca/people/${student.id}`} target=\"_blank\">\n        <div className=\"center aligned\">\n          <div className=\"image profile-container\">\n            <img className=\"ui rounded profile image\" src={ student.photo } />\n          </div>\n          <div className=\"header\">\n            { student.name } <br/>\n            <span className=\"meta\">\n              { student.title } <br/>\n            </span>\n            { student.type === 'alumni' &&\n            <span className=\"meta\">\n              { student.now }\n            </span>\n            }\n          </div>\n        </div>\n      </a>\n    )\n  }\n\n  render() {\n    return (\n      <div id=\"students\" >\n        <h1>Students</h1>\n        <h3>Current Students</h3>\n        <div className=\"ui ten cards\">\n          { students.filter(student => student.type !== 'alumni').map((student) => {\n            return this.renderStudent(student)\n          })}\n        </div>\n        <h3>Selected Alumni</h3>\n        <div className=\"ui ten cards\">\n          { students.filter(student => student.type === 'alumni').map((student) => {\n            return this.renderStudent(student)\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Students\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAxBA;AACA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAlBA;AACA;AAmBA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AAAA;AAQA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAIA;;;;AAtHA;AACA;AAwHA;;;;A","sourceRoot":""}